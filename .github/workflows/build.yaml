name: Build .NET Project

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for GitVersion

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0"

      - name: Restore tools
        run: dotnet tool restore

      - name: GitVersion
        run: dotnet gitversion /updateassemblyinfo

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build
          --no-restore
          --configuration Release

      - name: Install ReportGenerator
        run: dotnet tool install
          --global dotnet-reportgenerator-globaltool

      - name: Run Unit Tests
        run: dotnet test
          --no-build
          --configuration Release
          /p:CollectCoverage=true
          /p:CoverletOutputFormat=lcov
          /p:CoverletOutput=coverage/

      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage-report

      - name: Upload Coverage to GitHub Summary
        run: |
          echo "### Code Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "[View Detailed Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY

      - name: Package nuget
        run: dotnet pack BeGenerate
          --output nupkg
          --no-build
          --no-restore
          --configuration Release

      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: nupkg/

  publish:
    needs:
      - build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download NuGet Package
        uses: actions/download-artifact@v4
        with:
          name: nuget-package

      - name: Publish to NuGet
        run: dotnet nuget push nupkg/*.nupkg
          --api-key ${{ secrets.NUGET_API_KEY }}
          --source https://api.nuget.org/v3/index.json
          --skip-duplicate
